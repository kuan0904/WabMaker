@using MyTool.Enums
@using MyTool.Services
@using WabMaker.Web.Helpers
@model WebMaker.Entity.ViewModels.OrderPageResult
@{
    var buttonModel = new MyTool.ViewModels.PageButtonModel(Model.DataResult);
    buttonModel.PageType = MyTool.ViewModels.PageType.Number_PreNext;
    buttonModel.PreviousText = string.Format("<i class='fa fa-angle-left'></i>Back");
    buttonModel.NextText = string.Format("Next<i class='fa fa-angle-right'></i>");
    var buttons = MyTool.Tools.PageTool.SetPageButton(buttonModel);
}

<div class="pro-pagination mb-20">
    <div class="product-pagination">
        <span class="grid-item-list pr-10">顯示 @(Model.DataResult.DataStart) 到 @(Model.DataResult.DataEnd) 筆</span>

    </div>
    <ul class="blog-pagination">
        @foreach (var item in buttons)
        {
            Model.OrderPageModel.CurrentPage = item.Page;

            <li class="@(item.IsCurrent?"active":"")">
                @Ajax.RawActionLink(item.Name, "GetOrderPageList", "Member", Model.OrderPageModel,
           new AjaxOptions() { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "ListContent" }, null)
            </li>
        }
    </ul>
</div>
<div class="table-responsive">
    <table class="table table-bordered table-striped member-list-tab">
        <thead>
            <tr>
                <th></th>
                <th>訂單編號</th>
                <th>名稱</th>
                <th>建立日期</th>
                <th>狀態</th>
                <th>金額</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.DataResult.Data)
            {
                var parentItem = item.ParentItemViewModel;
                <tr>
                    <td>
                        @if (!item.ItemViewModel.Item.IsDelete)
                        {
                            <a class="btn btn-style-sixteen" href="@Url.Action("Competition", "Order", new { id = item.Order.ID })">
                                編輯
                            </a>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.OrderNumber)
                    </td>
                    <td>
                        @if (item.ItemViewModel != null && parentItem != null)
                        {
                            //link文章
                            @(parentItem.ItemLanguage.Subject)
                            @*<a href="@Url.Action("Get", "Item", new { routeName = parentItem.Item.RouteName })" target="_blank">
                                </a>*@
                        }@item.ItemViewModel.ItemLanguage.Subject
                    </td>
                    <td>@item.Order.CreateTime.ToString("yyyy/MM/dd")</td>
                    <td>
                        @{ var statusList = item.OrderDetails.Select(x => x.OrderStatus).Distinct(); }

                        @foreach (var status in statusList)
                        {
                            <div>@(status.GetDisplayName<OrderStatus>()): @item.OrderDetails.Count(x => x.OrderStatus == status)</div>
                        }

                        @*item.Order.OrderStatus.GetDisplayName<OrderStatus>()*@
                    </td>
                    <td>@item.Order.TotalPrice.ToString("0")</td>
                </tr>
                            }
        </tbody>
    </table>
</div>