@using MyTool.Services
@using MyTool.Enums
@using WabMaker.Web.Helpers
@using System.Dynamic
@model  WabMaker.Web.WebViewModels.ItemPageResult

@foreach (var item in Model.DataResult.Data)
{
    var mainImage = item.ItemFiles?.FirstOrDefault(x => x.SourceType == (int)SourceType.ItemConver);

    <div>
        <a href="@Url.Action("Get","Item", new { routeName = item.Item.RouteName })">@item.ItemLanguage.Subject</a>
        <br>
        @if (mainImage != null)
        {
            if (mainImage.FileType == FileType.YouTube)
            {
                <div class="embed-responsive embed-responsive-16by9">
                    <iframe class="embed-responsive-item" src="@_YouTube.SetIframe(mainImage.FilePath)" frameborder="0"></iframe>
                </div>
            }
            else
            {
                <img src="@RouteHelper.SetImagePath(mainImage.FilePath, mainImage.ThumbnailPath)" width="100" />
            }
        }

        <br>
        @if (item.ParentItems != null)
        {
            foreach (var category in item.ParentItems)
            {
                <a href="@Url.Action("Get", "Item", new { routeName = category.RouteName })">@category.Subject</a>
            }
        }

        <br>
        By@(item.ItemLanguage.Author) - @item.Item.Date.ToDateString() - @item.Item.ViewCount
        <br>
        <p>@_Html.WordSubstring(_Html.RemoveHtml(item.ItemLanguage.Content), 100)</p>


    </div>
    <hr>
}

@{
    var buttonModel = new MyTool.ViewModels.PageButtonModel(Model.DataResult);
    buttonModel.PageType = MyTool.ViewModels.PageType.Number_PreNext;
    buttonModel.PreviousText = string.Format("«");
    buttonModel.NextText = string.Format("»");
    var buttons = MyTool.Tools.PageTool.SetPageButton(buttonModel);
}

<div class="page-info">第@(Model.DataResult.CurrentPage)頁 / 共@(Model.DataResult.PageCount)頁</div>

<ul class="pagination">
    @foreach (var item in buttons)
    {
        Model.ItemPageModel.CurrentPage = item.Page;

        <li class="@(item.IsCurrent?"active":"")">
            @Ajax.RawActionLink(item.Name, "GetPageList", "Item", Model.ItemPageModel,
           new AjaxOptions() { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "ListContent" }, null)
        </li>
    }
</ul>
