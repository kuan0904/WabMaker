@using MyTool.Services
@using MyTool.Enums
@model WebMaker.Entity.ViewModels.EditItemViewModel

@{
    bool isNew = Model.Item.ID == Guid.Empty;
    ViewBag.Title = (isNew ? "新增" : "編輯");
    var frontLanguageTypes = WebMaker.BLL.Helpers.SessionManager.Client.FrontLanguageTypes;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("isNew", isNew ? 1 : 0)
        @Html.HiddenFor(model => model.Item.ID, new { id = "ID" })
        @Html.HiddenFor(model => model.ParentID)

        <div class="form-group ffl-wrapper-height">
            <div class="col-md-12">
                @if (Model.Item.StructureID == Guid.Empty)
                {
                    @Html.DropDownList("Item.StructureID", Model.SelectList, "選擇類型", new { @class = "form-control selectpicker" })
                }
                else
                {
                    <div class="form-control-string">
                        @Model.Item.cms_Structure.Name
                    </div>
                    @Html.HiddenFor(model => model.Item.StructureID)
                }
                @Html.ValidationMessageFor(model => model.Item.StructureID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ffl-wrapper">
            <div class="col-md-12">
                @Html.EditorFor(model => model.Item.RouteName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Item.RouteName, htmlAttributes: new { @class = "ffl-label" })
                @Html.ValidationMessageFor(model => model.Item.RouteName, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Item.Sort, new { id = "Sort" })
        @*<div class="form-group ffl-wrapper">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Item.Sort, new { htmlAttributes = new { @class = "form-control", id = "Sort" } })
                    @Html.LabelFor(model => model.Item.Sort, htmlAttributes: new { @class = "ffl-label", @for = "Sort" })
                    @Html.ValidationMessageFor(model => model.Item.Sort, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-12">
                @mHelper.CheckboxContain(_Model.GetDisplayName<WebMaker.Entity.Models.cms_Item>("MenuPositions"),
                                        "Item.MenuPositions", Model.Item.MenuPositions, _Enum.ToContainCheck<MenuPosition>(Model.Item.MenuPositions))
            </div>
        </div>

        @* -----語系----- *@
        @if (string.IsNullOrEmpty(frontLanguageTypes))
        {
            <div class="language-subject">
                <span>@(Model.ItemLanguage.LanguageType.GetDisplayName<LanguageType>())</span>
            </div>
        }
        @Html.HiddenFor(model => model.ItemLanguage.ItemID)
        @Html.HiddenFor(model => model.ItemLanguage.LanguageType)

        <div class="form-group ffl-wrapper">
            <div class="col-md-12">
                @Html.EditorFor(model => model.ItemLanguage.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.ItemLanguage.Subject, htmlAttributes: new { @class = "ffl-label" })
                @Html.ValidationMessageFor(model => model.ItemLanguage.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @mHelper.Switch(_Model.GetDisplayName<WebMaker.Entity.Models.cms_ItemLanguage>("IsEnabled"), "ItemLanguage.IsEnabled", Model.ItemLanguage.IsEnabled)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12 text-center">
                @if (!isNew)
                {
                    <input type="button" value="刪除" class="btn btn-danger btn-sm DeleteTree" />
                }
                <input id="SaveBtn" type="button" value="儲存" class="btn btn-info btn-sm" />
                <input type="button" value="取消" class="btn btn-default btn-sm CancelTree" />
            </div>
        </div>
    </div>
}
