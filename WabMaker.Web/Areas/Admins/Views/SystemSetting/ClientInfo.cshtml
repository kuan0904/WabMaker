@using MyTool.Enums
@using WebMaker.Entity.Models
@using WebMaker.Entity.ViewModels
@model MyTool.ViewModels.ClientInfoViewModel

@{
    ViewBag.Title = "公司基本資料";
}

<div id="editView">
    <div class="page-header">
        <h1>@ViewBag.Title</h1>
    </div>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <label class="control-label col-md-2">Logo</label>
                <div class="col-md-10">
                    @{
                        var fileList = new List<cms_ItemFile>();
                        if (!string.IsNullOrEmpty(Model?.Logo))
                        {
                            //id for dislpay oldFile
                            fileList.Add(new cms_ItemFile { FileType = (int)FileType.Images, FilePath = Model.Logo, ID = Guid.NewGuid()});
                        }
                    }
                    @Html.Partial("_FileList", new FileViewModel
               {
                   IdName = "ImageModel",
                   FileTypes = new List<FileType> { FileType.Images },
                   FileList = fileList,
                   IsMultiple = false
               })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="SaveBtn" type="button" value="Save" class="btn btn-info" />
                    <a id="returnUrl" href="@Url.Action("Index")" class="btn btn-default">取消</a>
                </div>
            </div>
        </div>
                        }
</div>

@section Scripts {
    <script>
        site.bindEvent();

        $(function () {
            site.fileUpload.fileList = [];
            $(site.editView).find(".fileuploader").each(function () {
                site.fileUpload.bindEvent($(this));
            });
        });
    </script>
}